{"version":3,"sources":["components/header/index.js","components/banner/index.js","components/donate/empty-submission-snackbar.js","models/donation.js","models/model.js","components/donate/index.js","components/donate/submit-donation.js","components/request-codes/index.js","components/business-sign-up/index.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","bar","backgroundColor","MainAppBar","classes","className","AppBar","position","Toolbar","variant","Container","Typography","color","textAlign","center","justifyContent","alignItems","minHeight","Banner","Grid","container","item","xs","sm","EmptySubmissionSnackbar","setOpen","open","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","Button","size","onClick","Donation","process","config","this","$http","request","BaseModel","padding","marginTop","Donate","React","useState","value","setValue","inputValue","setInputValue","Paper","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","target","FormControlLabel","control","Radio","label","TextField","id","replace","InputProps","startAdornment","InputAdornment","amount","donation","save","then","loadStripe","stripe","redirectToCheckout","sessionId","co_session","result","submitDonation","parseInt","openRequestForm","window","BusinessSignUp","RequestCodes","height","ctas","Home","styles","spacing","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","Model","axios"],"mappings":"6NAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,IAAK,CACHC,gBAAiB,eAIN,SAASC,IACtB,IAAMC,EAAUR,IAEhB,OACE,yBAAKS,UAAWD,EAAQL,MACtB,kBAACO,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWD,EAAQH,KAC3C,kBAACO,EAAA,EAAD,CAASC,QAAQ,SACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,gBClBZ,IAAMhB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVa,UAAW,SACXX,gBAAiB,WAEnBY,OAAQ,CACNC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SAIA,SAASC,IACtB,IAAMd,EAAUR,IAEhB,OACE,yBAAKS,UAAWD,EAAQL,MACtB,kBAACoB,EAAA,EAAD,CACEC,WAAS,EACTf,UAAWD,EAAQU,QAEnB,kBAACK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACZ,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,+F,sGCzBGY,EAA0B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC3CC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJJ,GAAQ,IAEV,OAAQ,kBAACK,EAAA,EAAD,CAAUC,aAAc,CAC9BC,SAAU,SACVC,WAAY,UACXP,KAAMA,EAAMQ,iBAAkB,IAAMC,QAASR,EAAaS,QAAQ,kDAAkDC,OAAQ,kBAAC,IAAMC,SAAP,KAC7H,kBAACC,EAAA,EAAD,CAAQ3B,MAAM,YAAY4B,KAAK,QAAQC,QAASd,GAAhD,gB,gDCbiBe,E,yKAGnB,MAAO,gB,2KCCL,MAAOC,sC,8BAIAC,GACP,OAAOC,KAAKC,MAAMC,QAAQH,O,GATKI,UCc7BpD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkD,QAAS,GACTC,UAAW,QAIA,SAASC,IAAU,IAAD,EACLC,IAAMC,SAAS,MADV,mBACxBC,EADwB,KACjBC,EADiB,OAEKH,IAAMC,SAAS,OAFpB,mBAExBG,EAFwB,KAEZC,EAFY,OAGPL,IAAMC,UAAS,GAHR,mBAGxB3B,EAHwB,KAGlBD,EAHkB,KA8BzBrB,EAAUR,IAEhB,OACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACZ,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,mBAGA,kBAAC8C,EAAA,EAAD,CAAOrD,UAAWD,EAAQL,MACxB,kBAACY,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,cAIA,kBAAC+C,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,UACA,kBAACE,EAAA,EAAD,CAAYC,aAAW,SAASC,KAAK,UAAUV,MAAOA,EAAOW,SAvChD,SAAArC,GACnB2B,EAAS3B,EAAMsC,OAAOZ,SAuCd,kBAACa,EAAA,EAAD,CAAkBb,MAAM,KAAKc,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,OACvD,kBAACH,EAAA,EAAD,CAAkBb,MAAM,KAAKc,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,OACvD,kBAACH,EAAA,EAAD,CAAkBb,MAAM,MAAMc,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,QACxD,kBAACH,EAAA,EAAD,CACEb,MAAM,QACNc,QACE,kBAACC,EAAA,EAAD,MAEFC,MACE,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHF,MAAM,eACNhB,MAAOE,EACPS,SAjDU,SAAArC,GACxB6B,EAAc7B,EAAMsC,OAAOZ,MAAMmB,QAAQ,MAAM,MAiDjCC,WAAY,CACVC,eAAgB,kBAACC,EAAA,EAAD,CAAgBrE,SAAS,SAAzB,WAM1B,6BACA,kBAACgC,EAAA,EAAD,CACE9B,QAAQ,YACRG,MAAM,UACN6B,QAzDY,WAGD,KAAfe,GAA+B,UAAVF,ECpCC,SAACuB,GAC7B,IAAIC,EAAW,IAAIpC,EAAS,CAAEmC,WAC9BC,EAASC,OAAOC,MAAK,WACnBC,YAAWtC,oCAAyCqC,MAAK,SAAAE,GACvDA,EAAOC,mBAAmB,CACxBC,UAAWN,EAASO,aACnBL,MAAK,SAAUM,aDyCpBC,CAA4B,KANd,UAAVjC,EACWkC,SAAShC,GAETgC,SAASlC,KAPtB7B,GAAQ,KAkDJ,uBAUJ,kBAAC,EAAD,CAAyBC,KAAMA,EAAMD,QAASA,KE7FpD,IAAM7B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkD,QAAS,GACTC,UAAW,QAITuC,EAAkB,WACtBC,OAAOhE,KAAK,wCAGC,SAASiE,IAEtB,IAAMvF,EAAUR,IAEhB,OACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACZ,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,0BAGA,kBAAC8C,EAAA,EAAD,CAAOrD,UAAWD,EAAQL,MACxB,kBAACY,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,+BAGA,kBAACD,EAAA,EAAD,CAAYF,QAAQ,IAAIG,MAAM,WAA9B,uEAGA,6BACA,6BACA,kBAAC2B,EAAA,EAAD,CACE9B,QAAQ,YACRG,MAAM,UACN6B,QAASgD,GAHX,0BC7BR,IAAM7F,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkD,QAAS,GACTC,UAAW,QAITuC,EAAkB,WACtBC,OAAOhE,KAAK,wCAGC,SAASkE,IAEtB,IAAMxF,EAAUR,IAEhB,OACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACZ,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,oBAGA,kBAAC8C,EAAA,EAAD,CAAOrD,UAAWD,EAAQL,MACxB,kBAACY,EAAA,EAAD,CAAYF,QAAQ,KAAKG,MAAM,WAA/B,+BAGA,kBAACD,EAAA,EAAD,CAAYF,QAAQ,IAAIG,MAAM,WAA9B,kIAGA,6BACA,6BACA,kBAAC2B,EAAA,EAAD,CACE9B,QAAQ,YACRG,MAAM,UACN6B,QAASgD,GAHX,mBC1BR,IAAM7F,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ8F,OAAQ,QACR3F,gBAAiB,WAEnB4F,KAAM,CACJ7C,QAAS,GACTjD,SAAU,OAyBC+F,MArBf,WACE,IAAMC,EAASpG,IACf,OACE,yBAAKS,UAAW2F,EAAOjG,MACrB,kBAAC,EAAD,MACA,kBAACmB,EAAD,MACA,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,CACE8E,QAAS,EACT7E,WAAS,EACTf,UAAW2F,EAAOF,MAElB,kBAAC3C,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UC1BK+C,MANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2D,qBCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9B,MAAK,SAAA+B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9E,YCjH5BgF,QAAMtE,MAAQuE,K","file":"static/js/main.789b695f.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  bar: {\n    backgroundColor: '#559700',\n  },\n}));\n\nexport default function MainAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.bar}>\n        <Toolbar variant=\"dense\">\n          <Container>\n            <Typography variant=\"h6\" color=\"inherit\">\n              A2 Helps\n            </Typography>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: 'center',\n    backgroundColor: '#e6f7cf',\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 250\n  }\n}));\n\nexport default function Banner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        className={classes.center}\n      >\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h4\" color=\"inherit\">\n            Support front-line workers and local businesses in Ann Arbor during the COVID-19 crisis.\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport const EmptySubmissionSnackbar = ({ setOpen, open }) => {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (<Snackbar anchorOrigin={{\n    vertical: 'bottom',\n    horizontal: 'center',\n  }} open={open} autoHideDuration={6000} onClose={handleClose} message=\"Submit an amount in dollars you wish to donate.\" action={<React.Fragment>\n    <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n      Continue\n    </Button>\n  </React.Fragment>} />);\n};\n","import Model from './model'\n\nexport default class Donation extends Model {\n\tresource()\n\t{\n\t\treturn 'donations'\n\t}\n}\n","import { Model as BaseModel } from 'vue-api-query'\n\nexport default class Model extends BaseModel {\n\n  // define a base url for a REST API\n  baseURL () {\n    return process.env.REACT_APP_API_URL\n  }\n\n  // implement a default request method\n  request (config) {\n    return this.$http.request(config)\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport { EmptySubmissionSnackbar } from './empty-submission-snackbar';\nimport { submitDonation } from './submit-donation';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 16,\n    marginTop: 12,\n  }\n}));\n\nexport default function Donate() {\n  const [value, setValue] = React.useState('25');\n  const [inputValue, setInputValue] = React.useState('150');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value.replace(/\\D/g,''));\n  };\n\n  const openDonations = () => {\n    let finalValue;\n\n    if (inputValue === '' && value === 'other') {\n      setOpen(true);\n      return;\n    }\n\n    if (value === 'other') {\n      finalValue = parseInt(inputValue);\n    } else {\n      finalValue = parseInt(value);\n    }\n\n    submitDonation(finalValue * 100);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={4}>\n      <Typography variant=\"h4\" color=\"inherit\">\n        Provide Support\n      </Typography>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Donate Now\n        </Typography>\n\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Amount</FormLabel>\n          <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\n            <FormControlLabel value=\"25\" control={<Radio />} label=\"25\" />\n            <FormControlLabel value=\"50\" control={<Radio />} label=\"50\" />\n            <FormControlLabel value=\"100\" control={<Radio />} label=\"100\" />\n            <FormControlLabel\n              value=\"other\"\n              control={\n                <Radio />\n              }\n              label={\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Other amount\"\n                  value={inputValue}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n                  }}\n                />\n              }\n            />\n          </RadioGroup>\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={openDonations}\n          >\n            Complete Donation\n          </Button>\n        </FormControl>\n      </Paper>\n\n      <EmptySubmissionSnackbar open={open} setOpen={setOpen} />\n    </Grid>\n  );\n}\n\n\n","import { loadStripe } from '@stripe/stripe-js';\nimport Donation from '../../models/donation';\n\nexport const submitDonation = (amount) => {\n  let donation = new Donation({ amount });\n  donation.save().then(() => {\n    loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY).then(stripe => {\n      stripe.redirectToCheckout({\n        sessionId: donation.co_session\n      }).then(function (result) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      });\n    });\n  });\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 16,\n    marginTop: 12,\n  }\n}));\n\nconst openRequestForm = () => {\n  window.open('https://forms.gle/5JbWrAUh9Y5peri67');\n}\n\nexport default function BusinessSignUp() {\n\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={4}>\n      <Typography variant=\"h4\" color=\"inherit\">\n        Sell Gift Certificates\n      </Typography>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Sign up your local business\n        </Typography>\n        <Typography variant=\"p\" color=\"inherit\">\n          Are you a local business who can sell gift certificates to A2Helps?\n        </Typography>\n        <br />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={openRequestForm}\n        >\n          Submit your business\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 16,\n    marginTop: 12,\n  }\n}));\n\nconst openRequestForm = () => {\n  window.open('https://forms.gle/46sQecMioRpCYyBh9');\n}\n\nexport default function RequestCodes() {\n\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={4}>\n      <Typography variant=\"h4\" color=\"inherit\">\n        Accept Gratitude\n      </Typography>\n      <Paper className={classes.root}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Request Codes for your Team\n        </Typography>\n        <Typography variant=\"p\" color=\"inherit\">\n          Do you lead a team of COVID-19 front-liners? Submit your information to see if your team is eligible to recieve A2Helps codes.\n        </Typography>\n        <br />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={openRequestForm}\n        >\n          Request Codes\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '../components/header';\nimport Banner from '../components/banner';\nimport Donate from '../components/donate';\nimport RequestCodes from '../components/request-codes';\nimport BusinessSignUp from '../components/business-sign-up';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    backgroundColor: '#efefef',\n  },\n  ctas: {\n    padding: 16,\n    flexGrow: 1,\n  },\n}));\n\nfunction Home() {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <AppBar />\n      <Banner />\n      <Container>\n        <Grid\n          spacing={2}\n          container\n          className={styles.ctas}\n        >\n          <Donate />\n          <RequestCodes />\n          <BusinessSignUp />\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios';\nimport { Model } from 'vue-api-query';\nimport '@stripe/stripe-js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// inject global axios instance as http client to Model\nModel.$http = axios\n"],"sourceRoot":""}